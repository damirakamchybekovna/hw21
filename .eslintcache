[{"C:\\Users\\HP\\OneDrive\\Рабочий стол\\lesson26.05\\src\\index.js":"1","C:\\Users\\HP\\OneDrive\\Рабочий стол\\lesson26.05\\src\\App.js":"2","C:\\Users\\HP\\OneDrive\\Рабочий стол\\lesson26.05\\src\\components\\SimpleInput.js":"3","C:\\Users\\HP\\OneDrive\\Рабочий стол\\lesson26.05\\src\\components\\BasicForm.js":"4","C:\\Users\\HP\\OneDrive\\Рабочий стол\\lesson26.05\\src\\components\\utils\\hooks\\useInput.js":"5"},{"size":142,"mtime":1616595887000,"results":"6","hashOfConfig":"7"},{"size":246,"mtime":1653909127927,"results":"8","hashOfConfig":"7"},{"size":7542,"mtime":1653902846730,"results":"9","hashOfConfig":"7"},{"size":3376,"mtime":1654001011364,"results":"10","hashOfConfig":"7"},{"size":1412,"mtime":1653902362703,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1i3ld7t",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\HP\\OneDrive\\Рабочий стол\\lesson26.05\\src\\index.js",[],["25","26"],"C:\\Users\\HP\\OneDrive\\Рабочий стол\\lesson26.05\\src\\App.js",[],"C:\\Users\\HP\\OneDrive\\Рабочий стол\\lesson26.05\\src\\components\\SimpleInput.js",["27","28","29"],"// 4-й вариант\nimport React, { useState } from \"react\";\nimport { useInput } from \"../components/utils/hooks/useInput\";\n\nconst SimpleInput = (props) => {\n  // alias\n  const { \n    value: enteredName, \n    isValid: enteredNameIsValid, \n    hasError: nameInputHasError, \n    valueChangeHandler: nameChangeHandler, \n    inputBlurHandler: nameBlurChangeHandler \n  }  = useInput((value) => value.trim() !== '');\n  const { \n    value: enteredEmail, \n    isValid: enteredEmailIsValid, \n    hasError: emailInputHasError, \n    valueChangeHandler: emailChangeHandler, \n    inputBlurHandler: emailBlurChangeHandler \n  } = useInput((value) => value.includes('@'))\n  let formIsValid = false;\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    if (!enteredNameIsValid) {\n      return;\n    }\n  };\n  const nameInputClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n    const emailInputClasses = emailInputHasError \n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={enteredName}\n          onChange={nameChangeHandler}\n          onBlur={nameBlurChangeHandler}\n        />\n        {nameInputHasError && <p>Name must not be empty</p>}\n        <label htmlFor=\"emai\">Your email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          value={enteredEmail}\n          onChange={emailChangeHandler}\n          onBlur={emailBlurChangeHandler}\n        />\n        {emailInputHasError && <p>Name must not be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\nexport default SimpleInput;\n\n// 3-й вариант\n\n// import React, { useEffect, useState } from 'react';\n// const SimpleInput = (props) => {\n//   const [enteredName, setEnteredName] = useState('');\n//   const [enteredNameTouched, setEnteredNameTouched] = useState(false)\n//   const [formIsValid, setFormIsValid] = useState(false)\n\n//   const enteredNameIsValid = enteredName.trim() !== ''\n//   const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched\n\n//   useEffect(() => {\n//     if(enteredNameIsValid) {\n//       setFormIsValid(true)\n//     } else {\n//       setFormIsValid(false)\n//     }\n//   }, [enteredNameIsValid])\n\n//   const nameInputChangeHandler = (event) => {\n//     setEnteredName(event.target.value);\n//   };\n//   const nameInputBlurHandler = () => {\n//     setEnteredNameTouched(true)\n//   }\n//   const formSubmissionHandler = (event) => {\n//     event.preventDefault();\n//     setEnteredNameTouched(true)\n//     if(!enteredNameIsValid) {\n//       return\n//     }\n//     setEnteredNameTouched(false)\n//   };\n//   const nameInputClasses =  nameInputIsInvalid ? 'form-control invalid' : 'form-control'\n//   return (\n//     <form onSubmit={formSubmissionHandler}>\n//       <div className={nameInputClasses}>\n//         <label htmlFor='name'>Your Name</label>\n//         <input\n//           type='text'\n//           id='name'\n//           value={enteredName}\n//           onChange={nameInputChangeHandler}\n//           onBlur={nameInputBlurHandler}\n//         />\n//         {nameInputIsInvalid && <p>Name must not be empty</p>}\n//       </div>\n//       <div className='form-actions'>\n//         <button disabled={!formIsValid}>Submit</button>\n//       </div>\n//     </form>\n//   );\n// };\n// export default SimpleInput;\n\n//2-й вариант\n\n// import React, { useRef, useState } from 'react';\n// const SimpleInput = (props) => {\n//   const [enteredName, setEnteredName] = useState('');\n//   const [enteredNameTouched, setEnteredNameTouched] = useState(false)\n//   const enteredNameIsValid = enteredName.trim() !== ''\n//   const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched\n//   const nameInputChangeHandler = (event) => {\n//     setEnteredName(event.target.value);\n//   };\n//   const nameInputBlurHandler = () => {\n//     setEnteredNameTouched(true)\n//   }\n//   const formSubmissionHandler = (event) => {\n//     event.preventDefault();\n//     setEnteredNameTouched(true)\n//     if(nameInputIsInvalid) {\n//       return\n//     }\n//     setEnteredNameTouched(false)\n//   };\n//   const nameInputClasses =  nameInputIsInvalid ? 'form-control invalid' : 'form-control'\n//   return (\n//     <form onSubmit={formSubmissionHandler}>\n//       <div className={nameInputClasses}>\n//         <label htmlFor='name'>Your Name</label>\n//         <input\n//           type='text'\n//           id='name'\n//           value={enteredName}\n//           onChange={nameInputChangeHandler}\n//           onBlur={nameInputBlurHandler}\n//         />\n//         {nameInputIsInvalid && <p>Name must not be empty</p>}\n//       </div>\n//       <div className='form-actions'>\n//         <button disabled={true}>Submit</button>\n//       </div>\n//     </form>\n//   );\n// };\n// export default SimpleInput;\n\n//1-й вариант\n\n// import React, { useRef, useState } from 'react';\n// const SimpleInput = (props) => {\n//   const [enteredName, setEnteredName] = useState('');\n//   const [isValid, setIsValid] = useState(false);\n//   const [enteredNameTouched, setEnteredNameTouched] = useState(false)\n//   const inputNameRef = useRef();\n//   const nameInputChangeHandler = (event) => {\n//     setEnteredName(event.target.value);\n//     if(!enteredName.includes('@')) {\n//       setIsValid(true)\n//       setEnteredNameTouched(true)\n//     }\n//     console.log(enteredName);\n//   };\n//   const nameInputBlurHandler = () => {\n//     setEnteredNameTouched(true)\n//     if (enteredName.trim() === '') {\n//       setIsValid(true);\n//       return;\n//     }\n//     if(!enteredName.includes('@')) {\n//       setIsValid(true)\n//       return\n//     }\n//     setEnteredNameTouched(false)\n//   }\n//   const formSubmissionHandler = (event) => {\n//     event.preventDefault();\n//     setEnteredNameTouched(true)\n//     if (enteredName.trim() === '' || !enteredName.includes('@')) {\n//       setIsValid(true);\n//       return;\n//     }\n//     setIsValid(false)\n//     const enteredRefName = inputNameRef.current.value;\n//     // fetch request to server\n//     console.log(enteredRefName);\n//   };\n//   const nameInputIsValid = isValid && enteredNameTouched\n//   const nameInputClasses =  nameInputIsValid ? 'form-control invalid' : 'form-control'\n//   return (\n//     <form onSubmit={formSubmissionHandler}>\n//       <div className={nameInputClasses}>\n//         <label htmlFor='name'>Your Name</label>\n//         <input\n//           ref={inputNameRef}\n//           type='text'\n//           id='name'\n//           value={enteredName}\n//           onChange={nameInputChangeHandler}\n//           onBlur={nameInputBlurHandler}\n//         />\n//         {nameInputIsValid && <p>Name must not be empty</p>}\n//       </div>\n//       <div className='form-actions'>\n//         <button>Submit</button>\n//       </div>\n//     </form>\n//   );\n// };\n// export default SimpleInput;\n\n//1-й так было\n// const SimpleInput = (props) => {\n//   return (\n//     <form>\n//       <div className='form-control'>\n//         <label htmlFor='name'>Your Name</label>\n//         <input type='text' id='name' />\n//       </div>\n//       <div className=\"form-actions\">\n//         <button>Submit</button>\n//       </div>\n//     </form>\n//   );\n// };\n\n// export default SimpleInput;\n",["30","31"],"C:\\Users\\HP\\OneDrive\\Рабочий стол\\lesson26.05\\src\\components\\BasicForm.js",[],"C:\\Users\\HP\\OneDrive\\Рабочий стол\\lesson26.05\\src\\components\\utils\\hooks\\useInput.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":2,"column":17,"nodeType":"38","messageId":"39","endLine":2,"endColumn":25},{"ruleId":"36","severity":1,"message":"40","line":16,"column":14,"nodeType":"38","messageId":"39","endLine":16,"endColumn":33},{"ruleId":"36","severity":1,"message":"41","line":35,"column":11,"nodeType":"38","messageId":"39","endLine":35,"endColumn":28},{"ruleId":"32","replacedBy":"42"},{"ruleId":"34","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'enteredEmailIsValid' is assigned a value but never used.","'emailInputClasses' is assigned a value but never used.",["44"],["45"],"no-global-assign","no-unsafe-negation"]